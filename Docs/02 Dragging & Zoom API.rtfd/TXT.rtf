{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Bold;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red77\green77\blue77;\red77\green77\blue77;}
\paperw11900\paperh16840\margl1440\margr1440\vieww21400\viewh13260\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\qc\partightenfactor0

\f0\fs36 \cf0 Drag & Drop
\fs24 \
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 With drag and drop we are moving elements by the top and left CSS properties. Therefore we need the left and top values of an absolute element and by manipulating these properties we can position the element correctly. However the mouse position needs to be relative to the top left position of the element here is an example\'85\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Drag figure 1.0.png \width10000 \height5500
}¬}\
\
The mouse position origin and the elements top left origin is different, we need to move the cursor origin relative to the elements top left position. To find the offset do the following\'85\
\
Math.round( e.x / zoomFactor - parseInt( el.style.left ) )\
\

\f1\b     dragEl
\f2\b0 .addEventListener( \'91
\f1\b mousedown
\f2\b0 \'92 , 
\f1\b function
\f2\b0 ( 
\f1\b Event
\f2\b0  ) \{\
\
        offestDrag
\f1\b X
\f2\b0  = 
\f1\b Event
\f2\b0 .x - 
\f1\b DOMElement
\f2\b0 .style.left;\
        offestDrag
\f1\b Y
\f2\b0  = 
\f1\b Event
\f2\b0 .y - 
\f1\b DOMElement
\f2\b0 .style.top;\
    \}\
\
   \cf2  //\'85 JS code rounding and parseInt functions are used to prevent errors\'85\cf0 \
\
	
\f1\b dragEl
\f2\b0 .addEventListener( \'91
\f1\b mousedown
\f2\b0 \'92 , 
\f1\b function
\f2\b0 ( 
\f1\b Event
\f2\b0  ) \{\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
        offestDrag
\f1\b X
\f2\b0  = 
\f1\b Math.round
\f2\b0 ( 
\f1\b Event
\f2\b0 .x - 
\f1\b parseInt
\f2\b0 ( 
\f1\b DOMElement
\f2\b0 .style.left ) );\
        offestDrag
\f1\b Y
\f2\b0  = 
\f1\b Math.round
\f2\b0 ( 
\f1\b Event
\f2\b0 .y - 
\f1\b parseInt
\f2\b0 ( 
\f1\b DOMElement
\f2\b0 .style.top  ) );\
    \}\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \

\f0 Notice we\'92re only calculating the offset as soon as the mouse is pressed down, when we move the mouse we just need to use the values of 
\f1\b offestDragX offestDragY 
\f0\b0 so that we can drag relative to the top left corner. \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Drag figure 2.0.png \width10000 \height5500
}¬}\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
\
Now we have the offset values for X and Y each time the mouse moves we just need to take away the offset values from the X and Y positions to make sure the mouse moves relative to the top left corner or transform origin.\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Drag figure 3.0.png \width10000 \height5500
}¬}\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
\
Here is the full code example in standard and JS from, also when the mouse is released or up we remove the event listener\'85\
\
	
\f1\b dragEl
\f2\b0 .addEventListener( \'91
\f1\b mousedown
\f2\b0 \'92 , 
\f1\b function
\f2\b0 ( 
\f1\b Event
\f2\b0  ) \{\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
        offestDrag
\f1\b X
\f2\b0  = 
\f1\b Event
\f2\b0 .x - 
\f1\b DOMElement
\f2\b0 .style.left;\
        offestDrag
\f1\b Y
\f2\b0  = 
\f1\b Event
\f2\b0 .y - 
\f1\b DOMElement
\f2\b0 .style.top;\
\
		
\f1\b dragEl
\f2\b0 .addEventListener( \'91
\f1\b mousedown
\f2\b0 \'92 , 
\f1\b DragElement
\f2\b0  );\
    \}\
\
	function 
\f1\b DragElement
\f2\b0 ( 
\f1\b Event
\f2\b0  ) \{\
		\
		
\f1\b dragEl
\f2\b0 .style.left = 
\f1\b Event
\f2\b0 .
\f1\b x
\f2\b0  - offsetDrag
\f1\b X
\f2\b0 ;\
		
\f1\b dragEl
\f2\b0 .style.top = 
\f1\b Event
\f2\b0 .
\f1\b y
\f2\b0  - offsetDrag
\f1\b Y
\f2\b0 ;\
	\}\
\
	
\f1\b dragEl
\f2\b0 .addEventListener( \'91
\f1\b mouseup
\f2\b0 \'92 , 
\f1\b function
\f2\b0 ( 
\f1\b Event
\f2\b0  ) \{\
\
		
\f1\b dragEl
\f2\b0 .removeEventListener( \'91
\f1\b mousedown
\f2\b0 \'92 , 
\f1\b DragElement
\f2\b0  );\
	\});\
\
\
\
	\cf3 //\'85 JS code rounding and parseInt functions are used to prevent errors\'85\cf0 \
\
\
\
	
\f1\b dragEl
\f2\b0 .addEventListener( \'91
\f1\b mousedown
\f2\b0 \'92 , 
\f1\b function
\f2\b0 ( 
\f1\b Event
\f2\b0  ) \{\
\
        offestDrag
\f1\b X
\f2\b0  = 
\f1\b Math.round
\f2\b0 ( 
\f1\b Event
\f2\b0 .x - 
\f1\b parseInt
\f2\b0 ( 
\f1\b DOMElement
\f2\b0 .style.left ) );\
        offestDrag
\f1\b Y
\f2\b0  = 
\f1\b Math.round
\f2\b0 ( 
\f1\b Event
\f2\b0 .y - 
\f1\b parseInt
\f2\b0 ( 
\f1\b DOMElement
\f2\b0 .style.top  ) );\
\
		
\f1\b dragEl
\f2\b0 .addEventListener( \'91
\f1\b mousedown
\f2\b0 \'92 , 
\f1\b DragElement
\f2\b0  );\
    \}\
\
	function 
\f1\b DragElement
\f2\b0 ( 
\f1\b Event
\f2\b0  ) \{\
		\
		
\f1\b dragEl
\f2\b0 .style.left = 
\f1\b Math.round
\f2\b0 ( 
\f1\b Event
\f2\b0 .
\f1\b x
\f2\b0  - offsetDrag
\f1\b X 
\f2\b0 );\
		
\f1\b dragEl
\f2\b0 .style.top  = 
\f1\b Math.round
\f2\b0 ( 
\f1\b Event
\f2\b0 .
\f1\b y
\f2\b0  - offsetDrag
\f1\b Y 
\f2\b0 );\
	\}\
\
	
\f1\b dragEl
\f2\b0 .addEventListener( \'91
\f1\b mouseup
\f2\b0 \'92 , 
\f1\b function
\f2\b0 ( 
\f1\b Event
\f2\b0  ) \{\
\
		
\f1\b dragEl
\f2\b0 .removeEventListener( \'91
\f1\b mousedown
\f2\b0 \'92 , 
\f1\b DragElement
\f2\b0  );\
	\});
\f0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\qc\partightenfactor0

\fs36 \cf0 Zoom dragging
\fs24 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
Zooming creates a new problem for our code. When zoomed in or out, dragging an element can lead to it flying off the screen if zoomed in or moving very slowly zoomed out. The reason is the 
\b element\'92s left and right positions
\b0  stay at 
\b 100%
\b0 ; however the 
\b cursors
\b0  
\b X & Y
\b0  position is relative to the zoom ( 
\b don\'92t forget we are manipulating the X & Y of the element at 100%
\b0  ) like so\'85\
\
Zoom 100%\'85\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Drag figure 4.0.png \width10000 \height5500
}¬}\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
Now lets zoom in to 
\b 200% \'85
\b0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Drag figure 5.0.png \width10000 \height5500
}¬}\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
You can see that when zoomed in the elements position is the same as 100% but the cursor position has changed relative to the zoom level. This plays havoc with our dragging code so we need to make sure whether we\'92re zoomed in or out our mouse position remains consistent the elements position. This is a simple fix by dividing the mouses X & Y positions to get 100% so at 200% zoom we need to divide by 2\'85\
\
	
\b var ZOOM = 2;
\b0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b \cf0 	dragEl
\f2\b0 .addEventListener( \'91
\f1\b mousedown
\f2\b0 \'92 , 
\f1\b function
\f2\b0 ( 
\f1\b Event
\f2\b0  ) \{\
\
        offestDrag
\f1\b X
\f2\b0  = ( 
\f1\b Event.x / ZOOM
\f2\b0  ) - 
\f1\b DOMElement
\f2\b0 .style.left;\
        offestDrag
\f1\b Y
\f2\b0  = ( 
\f1\b Event.y / ZOOM
\f2\b0  ) - 
\f1\b DOMElement
\f2\b0 .style.top;\
\
		
\f1\b dragEl
\f2\b0 .addEventListener( \'91
\f1\b mousedown
\f2\b0 \'92 , 
\f1\b DragElement
\f2\b0  );\
    \}\
\
	function 
\f1\b DragElement
\f2\b0 ( 
\f1\b Event
\f2\b0  ) \{\
		\
		
\f1\b dragEl
\f2\b0 .style.left = ( 
\f1\b Event.x / ZOOM
\f2\b0  ) - offsetDrag
\f1\b X
\f2\b0 ;\
		
\f1\b dragEl
\f2\b0 .style.top =  ( 
\f1\b Event.y / ZOOM
\f2\b0  ) - offsetDrag
\f1\b Y
\f2\b0 ;\
	\}
\f0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Drag figure 6.0.png \width10000 \height5500
}¬}\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b \cf0 	dragEl
\f2\b0 .addEventListener( \'91
\f1\b mousedown
\f2\b0 \'92 , 
\f1\b function
\f2\b0 ( 
\f1\b Event
\f2\b0  ) \{\
\
        offestDrag
\f1\b X
\f2\b0  = ( 
\f1\b Event.x / ZOOM
\f2\b0  ) - 
\f1\b DOMElement
\f2\b0 .style.left;\
        offestDrag
\f1\b Y
\f2\b0  = ( 
\f1\b Event.x / ZOOM
\f2\b0  ) - 
\f1\b DOMElement
\f2\b0 .style.top;\
\
		
\f1\b dragEl
\f2\b0 .addEventListener( \'91
\f1\b mousedown
\f2\b0 \'92 , 
\f1\b DragElement
\f2\b0  );\
    \}\
\
	function 
\f1\b DragElement
\f2\b0 ( 
\f1\b Event
\f2\b0  ) \{\
		\
		
\f1\b dragEl
\f2\b0 .style.left = ( 
\f1\b Event.x / ZOOM
\f2\b0  ) - offsetDrag
\f1\b X
\f2\b0 ;\
		
\f1\b dragEl
\f2\b0 .style.top  = ( 
\f1\b Event.x / ZOOM
\f2\b0  ) - offsetDrag
\f1\b Y
\f2\b0 ;\
	\}\
\
	
\f1\b dragEl
\f2\b0 .addEventListener( \'91
\f1\b mouseup
\f2\b0 \'92 , 
\f1\b function
\f2\b0 ( 
\f1\b Event
\f2\b0  ) \{\
\
		
\f1\b dragEl
\f2\b0 .removeEventListener( \'91
\f1\b mousedown
\f2\b0 \'92 , 
\f1\b DragElement
\f2\b0  );\
	\});\
\
\
\
	\cf3 //\'85 JS code rounding and parseInt functions are used to prevent errors\'85\cf0 \
\
\
\
	
\f1\b dragEl
\f2\b0 .addEventListener( \'91
\f1\b mousedown
\f2\b0 \'92 , 
\f1\b function
\f2\b0 ( 
\f1\b Event
\f2\b0  ) \{\
\
        offestDrag
\f1\b X
\f2\b0  = 
\f1\b Math.round
\f2\b0 ( ( 
\f1\b Event.x / ZOOM
\f2\b0  ) - 
\f1\b parseInt
\f2\b0 ( 
\f1\b DOMElement
\f2\b0 .style.left ) );\
        offestDrag
\f1\b Y
\f2\b0  = 
\f1\b Math.round
\f2\b0 ( ( 
\f1\b Event.x / ZOOM
\f2\b0  ) - 
\f1\b parseInt
\f2\b0 ( 
\f1\b DOMElement
\f2\b0 .style.top  ) );\
\
		
\f1\b dragEl
\f2\b0 .addEventListener( \'91
\f1\b mousedown
\f2\b0 \'92 , 
\f1\b DragElement
\f2\b0  );\
    \}\
\
	function 
\f1\b DragElement
\f2\b0 ( 
\f1\b Event
\f2\b0  ) \{\
		\
		
\f1\b dragEl
\f2\b0 .style.left = 
\f1\b Math.round
\f2\b0 ( ( 
\f1\b Event.x / ZOOM
\f2\b0  ) - offsetDrag
\f1\b X 
\f2\b0 );\
		
\f1\b dragEl
\f2\b0 .style.top  = 
\f1\b Math.round
\f2\b0 ( ( 
\f1\b Event.x / ZOOM
\f2\b0  ) - offsetDrag
\f1\b Y 
\f2\b0 );\
	\}\
\
	
\f1\b dragEl
\f2\b0 .addEventListener( \'91
\f1\b mouseup
\f2\b0 \'92 , 
\f1\b function
\f2\b0 ( 
\f1\b Event
\f2\b0  ) \{\
\
		
\f1\b dragEl
\f2\b0 .removeEventListener( \'91
\f1\b mousedown
\f2\b0 \'92 , 
\f1\b DragElement
\f2\b0  );\
	\});
\f0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
\
}